name: Build and push release image

on:
  push:
    branches:
      # Run on pushing branches like `release/1.0.0`
      - "release/*.*.*"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-release-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Extract build args
        # Extract version from branch name
        # Example: branch name `release/1.0.0` sets up env.RELEASE_VERSION=1.0.0
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF_NAME#release/}" >> $GITHUB_ENV
          echo "GIT_COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV
          echo "BUILD_USER=$(id -u -n)" >> $GITHUB_ENV
      - uses: pnpm/action-setup@v3.0.0
        with:
          version: 8.12.1
      - uses: actions/setup-node@v4
        with:
          node-version: "20.11.1"
          cache: pnpm
          cache-dependency-path: "frontend/pnpm-lock.yaml"
      - run: pnpm install --frozen-lockfile
        working-directory: frontend
      - name: Run pnpm release build
        run: |
          cp backend/plugin/advisor/config/* frontend/src/types
          cp backend/enterprise/api/plan.yaml frontend/src/types
          export BB_GIT_COMMIT_ID_FE=${{ env.GIT_COMMIT }}
          pnpm --dir ./frontend i && pnpm --dir ./frontend release
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}         
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: scripts/Dockerfile.depot
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ env.RELEASE_VERSION }}
            GIT_COMMIT=${{ env.GIT_COMMIT }}
            BUILD_TIME=${{ env.BUILD_TIME }}
            BUILD_USER=${{ env.BUILD_USER }}
      - name: Image digest
        run: echo "Successfully pushed bytebase/bytebase:${{ env.RELEASE_VERSION }} ${{ steps.bytebase_build.outputs.digest }}"
